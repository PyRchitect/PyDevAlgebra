class i:
    def __init__(naziv,adresa, tel, mail, preferenca=0)    
        self.naziv = naziv
        self.adresa = adresa
        self.tel = tel
        self.mail = mail 
        self.preferenca = preferenca
    
    def posalji_upit(self,naslov,tekst):
    import mail as ml
        ml.send_email(recipent=self.mail,subject=naslov,text=tekst)

class l:
    def __init__(ime, tel, adresa)
        self.adresa = adresa
        self.ime = ime
        self.tel = tel

def organizacija_rodjendana():

    slavljenik = input("> unesi slavljenika/cu: ")

    moguce_trajanje = list(range(1,4))

    while True:
        trajanje = int(input("> trajanje (1h/2h/3h): "))
        if trajanje in moguce_trajanje:
            break
        else:
            print("Greska!")

    radno_vrijeme = list(range(8,16))

    while True:
        termin = int(input("> dodaj termin (#h, 0 = izlaz): "))
        if termin in radno_vrijeme[:-trajanje]
            termini.append(termin)
        elif termini == 0:
            break
        else:
            print("Greska!")

    igraonice = [i(...), i(...), ...]   # ili ucitati iz nekog popisa
    ljudi = [l(...), l(...), ...]       # ili ucitati iz nekog kalendara

    termin = odredi_termin(datum,termini,trajanje)

    lokacije = odredi_lokaciju(termin,igraonice)

    if len(lokacije)>1:
        uzmi_preferiranu(lokacije)
    else:
        lokacija = lokacije[0]

    pozivnica=sastavi_pozivnicu(datum, termin, lokacija, slavljenik)

    zovi_ljude(ljudi,pozivnica)

    dogovori_tortu()

    odi_na_proslavu(datum, termin, lokacija)

def vikend(od,do):
    import kalendar as kl

    for dan in kl.dani(od,do):
        if dan == sub or dan == ned:
            yield dan

def odredi_termin(raspon,trazeni_termini,trajanje=1):
    termini = trazeni_termini or [x for x in range(8,16-trajanje+1)]
    raspolozivi = [[],[]]

    for dan in vikend(raspon):
        prvi_termin_flag = False
        for termin in termini(dan):
            if not zauzetost(dan,termin):
                # ako je prvi termin taj dan, dodaj datum u [0]
                if prvi_termin_flag == False:
                    raspolozivi[0].append(dan)
                    prvi_termin_flag = True
                # dodaj termin u [1]
                raspolozivi[1].append(termin)

    return raspolozivi                

def zauzetost(dan,termin):
    # otvori kalendar, cross-referenciraj, ...

    return zauzet_da_ne

def odredi_lokaciju(datum,termin,igraonice):
    naslov = "Proslava dječjeg rođendana"

    termin_format = ""
    for datum in termin[0]: # pretraga po datumima
        termin_format += f"{datum}: | "
        for sat in termin[1]:
            termin_format += f"{sat} |"
        termin_format += f"\n"
   
    tekst = f"Poštovani, jeste li raspoloživi u slijedećim terminima?\n{termin_format}\nUnaprijed hvala, ..."
    raspoloživi = []
    for lok in igraonice:
        odgovor = lok.posalji_upit(naslov,tekst)
        # pretpostavimo API s automatskim odgovaranjem
        if odgovor: raspolozivi.append(lok)
    return raspolozivi

def uzmi_preferiranu(igraonice):

    preferirana = igraonice[0]

    for lok in igraonice:
        if lok.preferenca > preferirana.preferenca:
            preferirana = lok.preferenca    

    return preferirana

def sastavi_pozivnicu(datum, termin, lokacija,slavljenik):
    import grafika_pozivnice as gp

    gp.datum = datum
    gp.termin = termin
    gp.lokacija = lokacija
    gp.slavljenik = slavljenik

    return gp.sastavi()

def zovi_ljude(ljudi,pozivnica):

    for x in ljudi:
        ... dostavi pozivnicu

def odi_na_proslavu(datum, termin, lokacija):
    ....



organizacija_rodjendana()